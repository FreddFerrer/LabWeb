{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AnalisisService = class AnalisisService {\n  constructor(http, router) {\n    this.http = http;\n    this.cargando = true;\n    this.urlEndPoint = 'http://localhost:8080/api/analisis';\n    this.cargarAnalisis();\n  }\n  cargarAnalisis() {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.urlEndPoint).subscribe(resp => {\n        this.analisis = resp;\n        this.cargando = false;\n        console.log(resp);\n      });\n    });\n  }\n};\nAnalisisService = __decorate([Injectable({\n  providedIn: 'root'\n})], AnalisisService);\nexport { AnalisisService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAM1BC,YAAoBC,IAAgB,EAAEC,MAAY;IAA9B,SAAI,GAAJD,IAAI;IAJhB,aAAQ,GAAI,IAAI;IAEjB,gBAAW,GAAU,oCAAoC;IAG9D,IAAI,CAACE,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,OAAO,IAAIC,OAAO,CAAE,CAAEC,OAAO,EAAEC,MAAM,KAAK;MACxC,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC,CAC9BC,SAAS,CAAGC,IAAiB,IAAI;QAChC,IAAI,CAACC,QAAQ,GAAGD,IAAI;QACpB,IAAI,CAACE,QAAQ,GAAG,KAAK;QACrBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CACD;AApBYX,eAAe,eAH3BD,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,GACWhB,eAAe,CAoB3B;SApBYA,eAAe","names":["Injectable","AnalisisService","constructor","http","router","cargarAnalisis","Promise","resolve","reject","get","urlEndPoint","subscribe","resp","analisis","cargando","console","log","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fredd\\Desktop\\Programacion\\Java\\Angular\\Web-Laboratorio\\src\\app\\services\\analisis-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IAnalisis } from '../interfaces/Ianalisis';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalisisService {\n\n  private cargando =  true;\n  public analisis: IAnalisis[];\n  public urlEndPoint:string = 'http://localhost:8080/api/analisis';\n\n  constructor(private http: HttpClient, router: Rout) { \n    this.cargarAnalisis();\n  }\n\n  cargarAnalisis(){\n    return new Promise( ( resolve, reject ) => {\n      this.http.get(this.urlEndPoint)\n      .subscribe( (resp: IAnalisis[]) => {\n        this.analisis = resp;\n        this.cargando = false;       \n        console.log(resp)\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}