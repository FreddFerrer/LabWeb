{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AnalisisService {\n  constructor(http) {\n    this.http = http;\n    this.cargando = true;\n    this.urlEndPoint = 'http://localhost:8080/api/analisis';\n    this.cargarAnalisis();\n  }\n  cargarAnalisis() {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.urlEndPoint).subscribe(resp => {\n        this.analisis = resp;\n        this.cargando = false;\n        console.log(resp);\n      });\n    });\n  }\n}\nAnalisisService.ɵfac = function AnalisisService_Factory(t) {\n  return new (t || AnalisisService)(i0.ɵɵinject(i1.HttpClient));\n};\nAnalisisService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnalisisService,\n  factory: AnalisisService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAM1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,aAAQ,GAAI,IAAI;IAEjB,gBAAW,GAAU,oCAAoC;IAG9D,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,OAAO,IAAIC,OAAO,CAAE,CAAEC,OAAO,EAAEC,MAAM,KAAK;MACxC,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACC,WAAW,CAAC,CAC9BC,SAAS,CAAGC,IAAiB,IAAI;QAChC,IAAI,CAACC,QAAQ,GAAGD,IAAI;QACpB,IAAI,CAACE,QAAQ,GAAG,KAAK;QACrBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAnBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["AnalisisService","constructor","http","cargarAnalisis","Promise","resolve","reject","get","urlEndPoint","subscribe","resp","analisis","cargando","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\fredd\\Desktop\\Programacion\\Java\\Angular\\Web-Laboratorio\\src\\app\\services\\analisis-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IAnalisis } from '../interfaces/Ianalisis';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalisisService {\n\n  private cargando =  true;\n  public analisis: IAnalisis[];\n  public urlEndPoint:string = 'http://localhost:8080/api/analisis';\n\n  constructor(private http: HttpClient) { \n    this.cargarAnalisis();\n  }\n\n  cargarAnalisis(){\n    return new Promise( ( resolve, reject ) => {\n      this.http.get(this.urlEndPoint)\n      .subscribe( (resp: IAnalisis[]) => {\n        this.analisis = resp;\n        this.cargando = false;       \n        console.log(resp)\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}